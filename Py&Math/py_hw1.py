# 1. Даны 2 строки long_phrase и short_phrase. Напишите код, который проверяет действительно ли длинная фраза long_phrase длиннее короткой short_phrase. И выводит True или False в зависимости от результата сравнения.

long_phrase = 'Насколько проще было бы писать программы, если бы не заказчики'
short_phrase = '640Кб должно хватить для любых задач. Билл Гейтс (по легенде)'

a = len (long_phrase)
b = len (short_phrase)
print (a > b)

# 2. Дана строка text. Определите какая из двух букв встречается в нем чаще - 'а' или 'и'.

text = 'Если программист в 9-00 утра на работе, значит, он там и ночевал'

a = text.count('а')
b = text.count('и')

if a > b:
  print ('Буква "а" встречается чаще')
else:
  prin ('Буква "и" встречается чаще')

# 3. Дано значение объема файла в байтах. Напишите перевод этого значения в мегабайты в формате: 'Объем файла равен 213.68Mb'

byte_in_mb = 1000000
file_size = int(input('Какой размер файла в байтах? '))

print('Объем файла равен ', str(file_size/byte_in_mb) + 'Mb')

# 4. Выведите на экран значение синуса 30 градусов с помощью метода math.sin.

import math
print(round(math.sin(30 * math.pi / 180),2))

# 5. В прошлом задании у вас скорее всего не получилось точного значения 0.5 из-за конечной точности вычисления синуса. Но почему некоторые простые операции также могут давать неточный результат? Попробуйте вывести на экран результат операции 0.1 + 0.2. Почему результат неточен?

print(0.1 + 0.2)

# Причина состоит в том, что у машины есть определённое ограничение на величину хранимой в памяти информации. Таким образом, некоторые дробные значения, например 0.1, при мат.операциях имеют в общем случае несущественную, но при вычислениях высокой точности ощутимую погрешность, как в вышеприведённом примере.

# Задания посложнее
# В переменных a и b записаны 2 различных числа. Вам необходимо написать код, который меняет значения a и b местами без использования третьей переменной.

a = (10, 13)
b = (15, 16)
print ((a[1], a[0]), (b[1], b[0]))

# Дано число в двоичной системе счисления: num=10011. Напишите алгоритм перевода этого числа в привычную нам десятичную систему счисления.
# Возможно, вам понадобится цикл прохождения всех целых чисел от 0 до m:
# for n in range(m)

# Решить данное задание не смог. Прошу показать, как это нужно было сделать.
