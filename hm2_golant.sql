SELECT ('‘»ќ: √оловань јнтон');
-- первый запрос
SELECT * FROM ratings LIMIT 10;

-- второй запрос
SELECT userId, COUNT(*) FROM ratings GROUP BY 1 ORDER BY 2 DESC LIMIT 10;

-- 1.1. SELECT , LIMIT - выбрать 10 записей из таблицы ratings (ƒл€ всех дальнейших запросов выбирать по 10 записей, если не указано иное)
SELECT * FROM ratings LIMIT 10;

-- 1.2. WHERE, LIKE - выбрать из таблицы links всЄ записи, у которых imdbid оканчиваетс€ на "42", а поле movieid между 100 и 1000
(
    SELECT *
    FROM links
    WHERE
    imdbid LIKE '%45'
    and movieid > '100'
    ) INTERSECT (
    SELECT *
    FROM links
    WHERE
    imdbid LIKE '%45'
    and movieid < '1000'
    )
    LIMIT 10;

-- 2.1. INNER JOIN выбрать из таблицы links все imdbId, которым ставили рейтинг 5
SELECT *
    FROM public.links
    INNER JOIN public.ratings
        ON links.movieid=ratings.movieid
    WHERE rating = '5'
LIMIT 10;

-- 3.1. COUNT() ѕосчитать число фильмов без оценок
SELECT
    COUNT (movieid) as count
FROM ratings
WHERE rating IS null;

-- 3.2 GROUP BY, HAVING вывести top-10 пользователей, у который средний рейтинг выше 3.5
SELECT
    DISTINCT userid,
    AVG (rating) AS avg_rating
FROM ratings
GROUP BY userid
HAVING AVG (rating) > 3.5
ORDER BY avg_rating DESC
LIMIT 10;

-- 4.1 ѕодзапросы: достать любые 10 imbdId из links у которых средний рейтинг больше 3.5
WITH help_table
AS (
    SELECT *
    FROM links
    LEFT JOIN ratings
        ON links.movieid=ratings.movieid
)
SELECT
    imdbid,
    cast (AVG (rating) AS numeric (3, 2)) AS avg_rat
    FROM help_table
GROUP BY imdbid
HAVING
    AVG (rating) > 3.5
LIMIT 10;

SELECT
    imdbid,
    movieid
FROM
    links
WHERE
    movieid in (
SELECT movieid
FROM ratings
GROUP BY ratings.movieid
HAVING
    AVG (rating) > 3.5
)
LIMIT 10;

-- 4.2 Common Table Expressions: посчитать средний рейтинг по пользовател€м, у которых более 10 оценок.
-- Ќужно подсчитать средний рейтинг по все пользовател€м, которые попали под условие - то есть в ответе должно быть одно число.

WITH tmp_table
AS (
    SELECT
        userid,
        rating,
        COUNT (rating) as mentions
    FROM ratings
    GROUP BY userid, rating
    HAVING COUNT (rating) > 10
    )
SELECT
    CAST (AVG (rating) as numeric (3,2)) as avg_rating
FROM tmp_table;